{"version":3,"sources":["components/header/Header.tsx","api/api.ts","store/TableStore.ts","store/Store.ts","hook/useTable.ts","components/table/tableHeadData/markAndModel/MarkAndModel.tsx","components/table/tableHeadData/TableHeadData.tsx","components/table/tableBodyData/TableBodyData.tsx","components/table/CarTable.tsx","components/searchBar/SearchBar.tsx","components/pickedCar/PickedCar.tsx","components/main/Main.tsx","components/sidebar/Sidebar.tsx","components/footer/Footer.tsx","App.tsx","theme/theme.js","index.tsx"],"names":["Header","as","h","bg","borderRadius","url","getCarsData","a","axios","get","responce","console","error","TableStore","tariffsList","cars","search","isLoading","pickedCar","sortingDirection","n","countPerRender","makeAutoObservable","this","res","data","tariffs_list","str","direction","length","map","car","mark","model","tariff","tariffs","year","toString","filter","RegExp","test","join","getSearchedCarsData","sort","arr1","arr2","toLowerCase","slice","TableContext","createContext","useTable","useContext","observer","store","dict","ArrowUp","ArrowDown","onClick","dir","updateSortingDirection","cursor","tarrif","getSearchedAndSortedCarsData","el","index","i","markAndModel","carMarkAndModel","yearYear","updatePickedCar","handleClick","nanoid","handleScroll","e","target","scrollHeight","scrollTop","clientHeight","updateN","useEffect","elem","document","getElementById","addEventListener","removeEventListener","flex","overflowY","id","variant","useState","searchWord","setSearchWord","onSubmit","preventDefault","updateSearch","onReset","resetSearch","pb","pointerEvents","children","Search","color","placeholder","value","onChange","type","p","fontSize","isLoaded","d","flexDir","Sidebar","Footer","getData","setCarsData","bind","templateRows","templateColumns","gap","px","rowSpan","colSpan","theme","extendTheme","styles","global","th","pos","top","components","Text","baseStyle","ReactDOM","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.b9ec8de1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Center, Text } from '@chakra-ui/react'\r\n\r\nfunction Header(){\r\n  return (\r\n    <Center as='header' h='100%' bg='gray.200' borderRadius='5px'>\r\n      <Text>Header</Text>\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default Header;","import axios from 'axios'\r\n\r\nconst url = 'https://city-mobil.ru/api/cars'\r\n\r\nexport async function getCarsData() {\r\n  try {\r\n    const responce = await axios.get(url)\r\n    return responce\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}","import { makeAutoObservable } from 'mobx'\r\nimport { TariffsList } from '../types/type'\r\nimport { CarsArray } from '../types/type'\r\nimport { getCarsData } from '../api/api'\r\n\r\nexport class TableStore {\r\n  tariffsList: TariffsList = []\r\n  cars: CarsArray = []\r\n  search: string = ''\r\n  isLoading: boolean = true\r\n  pickedCar: string = ''\r\n  sortingDirection: 'up' | 'down' | null = null\r\n  n: number = 1\r\n  countPerRender: number = 30\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  async setCarsData() {\r\n    const res = await getCarsData()\r\n    const {cars, tariffs_list} = res?.data\r\n    this.cars = cars\r\n    this.tariffsList = tariffs_list\r\n    this.isLoading = false\r\n  }\r\n\r\n  updateSearch(str: string) {\r\n    this.search = str\r\n  }\r\n\r\n  resetSearch() {\r\n    this.search = ''\r\n  }\r\n\r\n  updatePickedCar(pickedCar: string) {\r\n    this.pickedCar = pickedCar\r\n  }\r\n\r\n  updateSortingDirection(direction: 'up' | 'down') {\r\n    this.sortingDirection = direction\r\n    this.n = 1\r\n  }\r\n\r\n  updateN() {\r\n    if (this.countPerRender * this.n < this.cars.length) this.n++\r\n  }\r\n\r\n  get getCarsData() {\r\n    return this.cars\r\n      .map(car => [`${car.mark} ${car.model}`, ...this.tariffsList\r\n        .map(tariff => (car.tariffs[tariff]?.year.toString() || '-'))])\r\n  }\r\n\r\n  get getSearchedCarsData() {\r\n    if (this.search) {\r\n      return this.getCarsData.filter(car => new RegExp(`${this.search}`, 'i').test(`${car.join(' ')}`))\r\n    }\r\n    return this.getCarsData\r\n  }\r\n\r\n  get getSearchedAndSortedCarsData() {\r\n    if (this.sortingDirection === 'up') {\r\n      return this.getSearchedCarsData\r\n        .sort((arr1, arr2) => arr1[0].toLowerCase() < arr2[0].toLowerCase() ? 1 : -1).slice(0, this.n * this.countPerRender)\r\n    }\r\n    if (this.sortingDirection === 'down') {\r\n      return this.getSearchedCarsData\r\n        .sort((arr1, arr2) => arr1[0].toLowerCase() < arr2[0].toLowerCase() ? -1 : 1).slice(0, this.n * this.countPerRender)\r\n    }\r\n    return this.getSearchedCarsData.slice(0, this.n * this.countPerRender)\r\n  }\r\n\r\n}\r\n\r\n","import { createContext } from 'react'\r\nimport { TableStore } from './TableStore'\r\n\r\nexport const TableContext = createContext<TableStore>(new TableStore())\r\n\r\n","import { useContext } from 'react'\r\nimport { TableContext } from '../store/Store'\r\n\r\nfunction useTable() {\r\n  const tableObject = useContext(TableContext)\r\n  return tableObject\r\n}\r\n\r\nexport default useTable","import React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Th } from '@chakra-ui/react'\r\nimport { ArrowUpIcon, ArrowDownIcon } from '@chakra-ui/icons'\r\nimport useTable from '../../../../hook/useTable'\r\n\r\nfunction MarkAndModel(){\r\n  const store = useTable()\r\n  const dict = {\r\n    'up': <ArrowUpIcon/>,\r\n    'down': <ArrowDownIcon/>\r\n  }\r\n  // перекоючение логики стрелочки - указателя\r\n  const handleClick = () => {\r\n    const dir = store.sortingDirection\r\n    if (dir === null) {\r\n      store.updateSortingDirection('down')\r\n    } else {\r\n      store.updateSortingDirection(dir === 'up' ? 'down' : 'up')\r\n    }\r\n  }\r\n  return (\r\n    <Th onClick={handleClick} cursor='pointer'>Марка и модель {store.sortingDirection ? dict[store.sortingDirection] : null}</Th>\r\n  )\r\n}\r\n\r\nexport default observer(MarkAndModel)","import React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport {\r\n  Thead,\r\n  Tr,\r\n  Th,\r\n} from '@chakra-ui/react'\r\nimport MarkAndModel from './markAndModel/MarkAndModel'\r\nimport useTable from '../../../hook/useTable'\r\n\r\nfunction TableHeadData(){\r\n  const { tariffsList } = useTable()\r\n  return (\r\n    <Thead>\r\n      <Tr>\r\n        <MarkAndModel/>\r\n        {tariffsList.map(tarrif => <Th key={tarrif}>{tarrif}</Th>)}\r\n      </Tr>\r\n    </Thead>\r\n  )\r\n}\r\n\r\nexport default observer(TableHeadData)","import React from 'react'\r\nimport { Tbody, Tr, Td } from '@chakra-ui/table'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { nanoid } from 'nanoid'\r\nimport useTable from '../../../hook/useTable'\r\n\r\nfunction TableBodyData() {\r\n  const store = useTable()\r\n  // логика составляния надписи в зависимости от того, куда кликнули\r\n  const handleClick = (i: number, markAndModel: string, year: string) => {\r\n    const carMarkAndModel = `Выбран автомобиль ${markAndModel} `\r\n    const yearYear = year === '-' ? '' : `${year} года`\r\n    const pickedCar = i > 0 ? carMarkAndModel + yearYear : carMarkAndModel\r\n    store.updatePickedCar(pickedCar)\r\n  }\r\n\r\n  return (\r\n    <Tbody >\r\n      {store.getSearchedAndSortedCarsData.map(car => (\r\n        <Tr key={nanoid()}>\r\n          {car.map((el, index) => <Td key={nanoid()} onClick={() => handleClick(index, car[0], el)}>{el}</Td>)}\r\n        </Tr>\r\n    ))}\r\n    </Tbody>\r\n  )\r\n}\r\n\r\nexport default observer(TableBodyData)","import React, { useEffect } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Table, Box } from '@chakra-ui/react'\r\nimport TableHeadData from './tableHeadData/TableHeadData'\r\nimport TableBodyData from './tableBodyData/TableBodyData'\r\nimport useTable from '../../hook/useTable'\r\n\r\nfunction CarTable() {\r\n  const store = useTable()\r\n  //добавить обработчик скролла на контейнер таблицы\r\n  useEffect(() => {\r\n    const elem = document.getElementById('scroll')\r\n    if (elem) {\r\n      elem.addEventListener('scroll', handleScroll)\r\n    }\r\n    return () => elem?.removeEventListener('scroll', handleScroll)\r\n  })\r\n  //обработка скролла, рендер новых машин помере приближения к концу списка\r\n  function handleScroll(e: Event) {\r\n    const { target } = e\r\n    if (target) {\r\n      const scrollHeight = (target as HTMLDivElement).scrollHeight\r\n      const scrollTop = (target as HTMLDivElement).scrollTop\r\n      const clientHeight = (target as HTMLDivElement).clientHeight\r\n      if (scrollHeight - (scrollTop + clientHeight) < 100) {\r\n        store.updateN()\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n      <Box flex='0 1 760px' overflowY='scroll' id='scroll'>\r\n        <Table variant='simple' >\r\n          <TableHeadData/>\r\n          <TableBodyData />\r\n        </Table>\r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default observer(CarTable)","import React, { useState } from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { HStack, Input, InputGroup, InputLeftElement, Button } from '@chakra-ui/react'\r\nimport { SearchIcon } from '@chakra-ui/icons'\r\nimport useTable from '../../hook/useTable'\r\n\r\nfunction SearchBar() {\r\n  const [searchWord, setSearchWord] = useState<string>('')\r\n  \r\n  const store = useTable()\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault()\r\n    store.updateSearch(searchWord)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setSearchWord('')\r\n    store.resetSearch()\r\n  }\r\n\r\n  return (\r\n    <HStack as='form' onSubmit={handleSubmit} onReset={handleReset} pb='10px'>\r\n        <InputGroup>\r\n          <InputLeftElement\r\n            pointerEvents='none'\r\n            children={<SearchIcon color='gray.300' />}/>\r\n          <Input placeholder='Поиск' value={searchWord} onChange={(e) => setSearchWord(e.target.value)}/>\r\n        </InputGroup>\r\n        <Button type='submit'>Найти</Button>\r\n        <Button type='reset' >Сбросить</Button>\r\n    </HStack>\r\n  )\r\n}\r\n\r\nexport default observer(SearchBar)","import React from 'react'\r\nimport  { observer } from 'mobx-react-lite'\r\nimport { Text } from '@chakra-ui/react'\r\nimport useTable from '../../hook/useTable'\r\n\r\nfunction PickedCar(){\r\n  const { pickedCar } = useTable()\r\n  return (\r\n    <Text p='0 0 0 30px' fontSize='2xl'>{pickedCar}</Text>\r\n  )\r\n}\r\n\r\nexport default observer(PickedCar)","import React from 'react'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Skeleton } from '@chakra-ui/react'\r\nimport CarTable from '../table/CarTable'\r\nimport SearchBar from '../searchBar/SearchBar'\r\nimport PickedCar from '../pickedCar/PickedCar'\r\nimport useTable from '../../hook/useTable'\r\n\r\nfunction Main(){\r\n  // флаг загрузки, чтобы сработал скелетон\r\n  const { isLoading } = useTable()\r\n\r\n  return (\r\n    <Skeleton as='main' isLoaded={!isLoading} d='flex' flexDir='column' h='100%'>\r\n      <SearchBar/>\r\n      <CarTable/>\r\n      <PickedCar/>\r\n    </Skeleton>\r\n  )\r\n}\r\n\r\nexport default observer(Main)","import React from 'react'\r\nimport { Center, Text } from '@chakra-ui/react'\r\n\r\nfunction Sidebar(){\r\n  return (\r\n    <Center as='aside' h='100%' bg='gray.200' borderRadius='5px'>\r\n      <Text>Sidebar</Text>\r\n    </Center>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react'\r\nimport { Center, Text } from '@chakra-ui/react'\r\n\r\nfunction Footer(){\r\n  return (\r\n    <Center as='footer' h='100%' bg='gray.200' borderRadius='5px'>\r\n      <Text>Footer</Text>\r\n    </Center>\r\n    \r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { useEffect } from 'react'\nimport { observer } from 'mobx-react-lite'\nimport { Grid, GridItem } from '@chakra-ui/react'\nimport Header from './components/header/Header'\nimport Main from './components/main/Main'\nimport Sidebar from './components/sidebar/Sidebar'\nimport Footer from './components/footer/Footer'\nimport useTable from './hook/useTable'\n\nfunction App() {\n  const store = useTable()\n  const getData = store.setCarsData.bind(store)\n  useEffect(() => {\n    getData()\n  }, [getData])\n  return (\n    <Grid\n      h='100vh'\n      templateRows='1fr minmax(0, 800px) 1fr'\n      templateColumns='repeat(10, 1fr)'\n      gap={4}\n      px='4px'\n    >\n      <GridItem rowSpan={1} colSpan={10}><Header/></GridItem>\n      <GridItem colSpan={2}><Sidebar/></GridItem>\n      <GridItem colSpan={8}><Main/></GridItem>\n      <GridItem rowSpan={1} colSpan={10}><Footer/></GridItem>\n    </Grid>\n  )\n}\n\nexport default observer(App)\n","import { extendTheme } from '@chakra-ui/react'\r\n\r\nexport const theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      th: {\r\n        pos: 'sticky',\r\n        top: '0',\r\n        bg: 'gray.100',\r\n      },\r\n    },\r\n  },\r\n  components: {\r\n    Text: {\r\n      baseStyle: {\r\n        fontSize: 'xl'\r\n      }\r\n    }\r\n  }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport { theme } from './theme/theme';\nimport { TableContext } from './store/Store'\nimport { TableStore } from './store/TableStore'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <TableContext.Provider value={new TableStore()}>\n        <App />\n      </TableContext.Provider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}